class Solution {
public:
    int minimumSeconds(vector<int>& nums) {
        int n = nums.size();
        map<int,vector<int>> mp;
        for(int i = 0;i<n;i++){
            mp[nums[i]].push_back(i);
        }
        int ans = INT_MAX;
        for(auto i : mp){
            vector<int> temp = i.second;
            int hold = (*temp.begin() + (n-1 - *(--temp.end())));
            for(int j = 1;j<temp.size();j++){
                hold = max(((temp[j] - temp[j-1] - 1)),hold); // we are storing only maximum as every gap filling of current element is going on same time and every element will be done before maximum gap time so that will be the minimum time required to fill all gaps with that element
            }
            ans = min(ans,(hold+1)/2);
        }
        return ans;
    }
};
