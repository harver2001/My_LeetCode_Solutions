/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* logic(vector<ListNode*>& v, int l, int r){
        if(r<l) return NULL;
        int mid = (l+r)/2;
        int val = v[mid]->val;
        TreeNode* newNode = new TreeNode(val);
        newNode->left = logic(v,l,mid-1);
        newNode->right = logic(v,mid+1,r);
        return newNode;
    }

    TreeNode* sortedListToBST(ListNode* head) {
        vector<ListNode*> v;
        ListNode* temp = head;
        while(temp){
            v.push_back(temp);
            temp = temp->next;
        }
        int l = 0;
        int r = v.size()-1;
        return logic(v,l,r);
    }
    
};
