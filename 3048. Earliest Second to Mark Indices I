class Solution {
public:
    bool logic(vector<int>& nums, vector<int>& changeIndices, int mid){
        unordered_map<int,int> last;
        for(int i = 0;i<mid;i++) last[changeIndices[i]] = i;
        if(last.size() != nums.size()) return false;
        int count = 0;
        for(int i = 0;i<mid;i++){
            if(i == last[changeIndices[i]]){
                if(count < nums[changeIndices[i]-1]) return false;
                else count -= nums[changeIndices[i]-1];
            }
            else count++;
        }
        return true;
    }
    int earliestSecondToMarkIndices(vector<int>& nums, vector<int>& changeIndices) {
        int l = 0;
        int r = changeIndices.size()  + 1;
        int ans = -1;
        while(l < r){
            int mid = l + (r - l)/2;
            if(logic(nums,changeIndices,mid)){
                ans = mid;
                r = mid;
            }
            else l = mid+1;
        }
        return ans;
    }
};
