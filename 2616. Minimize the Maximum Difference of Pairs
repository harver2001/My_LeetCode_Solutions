class Solution {
public:
    bool isValid(int target, int p, vector<int>& nums){
        int n = nums.size();
        for(int i = 1;i<n;i++){
            if(nums[i] - nums[i-1] <= target){ // subtracting adjacent values since we want max difference to be minimized
                p--;
                i++;
            }
        }
        return p <= 0;
    }
    int minimizeMax(vector<int>& nums, int p) {
        sort(nums.begin(),nums.end());
        int n = nums.size();
        int low = 0;
        int high = nums[n-1] - nums[0];
        int ans = 0;
        while(low <= high){
            int mid = (low+high)/2;
            if(isValid(mid,p,nums)){
                ans = mid;
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return ans;
    }
};
