class Solution {
public:
    int dp[41][41];
    int logic(map<pair<int,int>,int>& mp, int l, int r){
        if(l == r) return 0; // leaf node
        if(dp[l][r] != -1) return dp[l][r];
        int ans = 1e9;
        for(int i = l;i<r;i++){
            ans = min(ans, (mp[{l,i}] * mp[{i+1,r}]) + logic(mp,l,i) + logic(mp,i+1,r));
        }
        return dp[l][r] = ans;
    }
    int mctFromLeafValues(vector<int>& arr) {
        map<pair<int,int>,int> mp;
        int n = arr.size();
        memset(dp,-1,sizeof(dp));
        for(int i = 0;i<n;i++){
            mp[{i,i}] = arr[i];
            for(int j = i+1;j<n;j++){
                mp[{i,j}] = max(arr[j], mp[{i,j-1}]);
            }
        }
        return logic(mp,0,n-1);
    }
};
